--[[
    Visual Bots v0.1

    Modified & (heavily) extended from example code for safe formspecs which is
    Copyright (C) 2017 - Auke Kok.
    Modifications are (c)2019 Nigel Garnett.

    Permission to use, copy, modify, and/or distribute this software for
    any purpose with or without fee is hereby granted, provided that the
    above copyright notice and this permission notice appear in all copies.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL
    WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED
    WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR
    BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES
    OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
    WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
    ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
    SOFTWARE.

    Starting point code for safer formspecs is available here: https://github.com/sofar/tele
    with it's attendant excelent description here: https://forum.minetest.net/viewtopic.php?f=47&t=19129#
]]--


local form_context = {}
minetest.register_on_leaveplayer(function(player)
	local name = player:get_player_name()
    if name and form_context[name] then
    	form_context[name] = nil
    end
end)

minetest.register_node("vbots:bot", {
	description = "A vbots bot node",
    tiles = {
		"drogna_block_triangle_green.png",
		"drogna_block_circle_red.png",
		"drogna_block_circle_red.png",
		"drogna_block_circle_red.png",
		"drogna_block_circle_red.png",
		"drogna_block_circle_red.png"
	},
    is_ground_content = false,
	groups = {cracky = 3},
    on_construct = function(pos)
        local meta = minetest.get_meta(pos)
        local inv = meta:get_inventory()
        inv:set_size("main", 16)
        meta:from_table({
            inventory = {
                main = {[1] = "vbots:bot", [2] = "", [3] = "", [4] = "",
                        [5] = "", [6] = "", [7] = "", [8] = "",
                        [9] = "",[10] = "", [11] = "", [12] = "",
                        [13] = "", [14] = "", [15] = "", [16] = "vbots:bot"
                    }
            },
        })
    end,
	after_place_node = function(pos, placer)
		local meta = minetest.get_meta(pos)
		meta:set_string("owner", placer:get_player_name() or "")
		meta:set_string("infotext", "Visualbot owned by "..meta:get_string("owner"))
    end,
	on_rightclick = function(pos, node, clicker, itemstack, pointed_thing)
        local name = clicker:get_player_name()
        local meta = minetest.get_meta(pos)
        local inv = meta:get_inventory()
        if meta:get_string("owner")=="" then
            meta:set_string("owner", name)
        end
        if meta:get_string("target")=="" then
            meta:set_string("target", minetest.pos_to_string(pos))
        end
        local tpos = meta:get_string("target")

        if name~="" then
            local formspec = "size[10,10]"
            if minetest.check_player_privs(clicker, "server") or meta:get_string("owner")==name then
                formspec = formspec.."field[1,1;4,1;target;target;"..tpos.."]button_exit[5,0.8;1,1;set;set]"
                formspec = formspec.."list[inventory_location;main;1,4;8,2;]"
            end
            formspec = formspec.."button[1,2;6,1;teleport;teleport]"
            form_context[name] = minetest.pos_to_string(pos)
            minetest.show_formspec(name, "vbotform", formspec)
        end
	end
})

minetest.register_on_player_receive_fields(function(player, formname, fields)
	local name = player:get_player_name()
	local pos = form_context[name]
	if not pos then
		return true
	end
	pos = minetest.string_to_pos(pos)
	local node = minetest.get_node(pos)
    local meta = minetest.get_meta(pos)
	if node.name ~= "vbots:bot" then
		form_context[name] = nil
		return true
	end
	if fields.target and fields.set and (minetest.check_player_privs(player, "server") or meta:get_string("owner")==name) then
		local meta = minetest.get_meta(pos)
		meta:set_string("target", fields.target)
	end
	if fields.teleport then
		local meta = minetest.get_meta(pos)
		local target = meta:get_string("target")
		player:set_pos(minetest.string_to_pos(target))
	end

	form_context[name] = nil
end)
